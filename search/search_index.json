{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Covid Responder Lex Bot As the name suggests this is a chatbot meant to respond COVID-19 pandemic related queries. It is mainly made with the help of amazon's lex module. It has the following functionalities - 1. Answers FAQ about COVID-19 - Following are the kind of queries that you can ask this chatbot - I need information about corona virus ? What can I do to protect myself and prevent the spread of disease what precautions should I take How does COVID spread can you tell me about symptoms of corona How do I know if it is COVID or just the common flu 2. Able to send mail to the users - It can ask your email id, phone number and name initialy and has the ability to send you a mail which will contain all the details that you need to know about COVID-19. It also sends an attachment of which contains detailed FAQs related to this pandemic. Note All the details that you get from this chatbot are of from authentic resource. All the references for the same can be found in the email as well as the end of this doc under the reference section 3. Able to give covid cases status - PINCODE wise- It can give give you status as shown below when you ask pincode wise covid case starus- Country wise","title":"Covid Responder Lex Bot"},{"location":"#covid-responder-lex-bot","text":"As the name suggests this is a chatbot meant to respond COVID-19 pandemic related queries. It is mainly made with the help of amazon's lex module. It has the following functionalities -","title":"Covid Responder Lex Bot"},{"location":"#1-answers-faq-about-covid-19-","text":"Following are the kind of queries that you can ask this chatbot - I need information about corona virus ? What can I do to protect myself and prevent the spread of disease what precautions should I take How does COVID spread can you tell me about symptoms of corona How do I know if it is COVID or just the common flu","title":"1. Answers FAQ about COVID-19 -"},{"location":"#2-able-to-send-mail-to-the-users-","text":"It can ask your email id, phone number and name initialy and has the ability to send you a mail which will contain all the details that you need to know about COVID-19. It also sends an attachment of which contains detailed FAQs related to this pandemic. Note All the details that you get from this chatbot are of from authentic resource. All the references for the same can be found in the email as well as the end of this doc under the reference section","title":"2. Able to send mail to the users -"},{"location":"#3-able-to-give-covid-cases-status-","text":"PINCODE wise- It can give give you status as shown below when you ask pincode wise covid case starus- Country wise","title":"3. Able to give covid cases status -"},{"location":"p02/","text":"Chatbots basics Understanding Chatbots Quote A chatbot is a software application used to conduct an on-line chat conversation via text or text-to-speech, in lieu of providing direct contact with a live human agent. -WikiPedia Chatbots are designed to converse with humans. They are meant to simulate human way of conversing. It needs a lot of training to reach a an acceptable level. It was Michael Mauldin (creator of the first Verbot) in 1994 who coined the terma \"ChatterBot\". Application of Chatbots - Customer Service Information gathering Responding to FAQs. Virtual assistants like Google Assistant, Amazon Alexa etc Educational chatbots Entertainment chatbots News chatbots Health chatbots Banking chatbots (Finance) e-commerce chatbots Healthcare etc Info Turing test - In 1950, Alan Turing's famous article \"Computing Machinery and Intelligence\" was published, which proposed what is now called the Turing test as a criterion of intelligence. This criterion depends on the ability of a computer program to impersonate a human in a real-time written conversation with a human judge to the extent that the judge is unable to distinguish reliably\u2014on the basis of the conversational content alone\u2014between the program and a real human. -WikiPedia Limitations of Chatbots - its still an active area of research as there's no perfect chatbot availble till now. They have the following limitations - They can fail when an unsaved or untrained query is asked. Their efficiency highly depens on the Natural language processing. Hence sometimes accents and minot spelling mistakes may lead to a bad response. They have some sort of tunnel vision i.e. they can only focus on current query. They can't reply to multiple query at a time. They need a lot of data to get trained. And there can be other limitations as well but these were the major ones. The need for chatbots as per Business perspective - Easily Accesibile 24x7: - They are availble 24x7 for the customers. So they can tirelessly work without taking off unlike humans. And they can easily answer some generic queries plus can take information from the users effectively. Efficiency: - Any customer can get a lot of basic detials about their stuff like where is there food order? or ETA of the delivery? Train schedule status etc in their mobile devices any where any time. Scalable: - It can handle multiple customer without getting tired. Plus waiting time also get reduced unlike the IVR calls where you have to wait untill the customer support agent gets free. Cost effective: - Certainly it can save you a lot of time and money with this much of efficiency and availibility. Insights and lead genration: - Most of the time sales team can get their leads and insights from the chatbots. With this insight it helps them to know their client before hand like with their occupation, age, gender etc we can anticpate a lot about the customer. Point to consider before building a chatbot is problem solvable by simple QnA ? is it highly repetitive which requires fetching and anlaysis of data ? can it be automated ? If answers to above queries are yes then your business problem can be solved with a chatbot. Common terminologies used in the chatbots Intent This means what could be the intention of the customer when he/she is asking certain questions. Example Q1. tell me about today's whether? Q2. how's the whether today ? the intent in both the questions user wants to know whether Entity This are the parameters or the values that we want to extract from the queries asked by the users. Example Q1. Book me a flight from India to US? the entity is source and destination of the flight intent is to book a flight Utterances This is nothing but the response of the chatbot for the query. Fulfillment This is nothing but processing an information given by the user and sendinf them a proper response. Here processing may involve interating with several APIs and then responding back. Example Booking a flight or cab. Ordering food etc This terminlogies will come into picture when we will build our bot","title":"Chatbots basics"},{"location":"p02/#chatbots-basics","text":"","title":"Chatbots basics"},{"location":"p02/#understanding-chatbots","text":"Quote A chatbot is a software application used to conduct an on-line chat conversation via text or text-to-speech, in lieu of providing direct contact with a live human agent. -WikiPedia Chatbots are designed to converse with humans. They are meant to simulate human way of conversing. It needs a lot of training to reach a an acceptable level. It was Michael Mauldin (creator of the first Verbot) in 1994 who coined the terma \"ChatterBot\".","title":"Understanding Chatbots"},{"location":"p02/#application-of-chatbots-","text":"Customer Service Information gathering Responding to FAQs. Virtual assistants like Google Assistant, Amazon Alexa etc Educational chatbots Entertainment chatbots News chatbots Health chatbots Banking chatbots (Finance) e-commerce chatbots Healthcare etc Info Turing test - In 1950, Alan Turing's famous article \"Computing Machinery and Intelligence\" was published, which proposed what is now called the Turing test as a criterion of intelligence. This criterion depends on the ability of a computer program to impersonate a human in a real-time written conversation with a human judge to the extent that the judge is unable to distinguish reliably\u2014on the basis of the conversational content alone\u2014between the program and a real human. -WikiPedia","title":"Application of Chatbots -"},{"location":"p02/#limitations-of-chatbots-","text":"its still an active area of research as there's no perfect chatbot availble till now. They have the following limitations - They can fail when an unsaved or untrained query is asked. Their efficiency highly depens on the Natural language processing. Hence sometimes accents and minot spelling mistakes may lead to a bad response. They have some sort of tunnel vision i.e. they can only focus on current query. They can't reply to multiple query at a time. They need a lot of data to get trained. And there can be other limitations as well but these were the major ones.","title":"Limitations of Chatbots -"},{"location":"p02/#the-need-for-chatbots-as-per-business-perspective-","text":"","title":"The need for chatbots as per Business perspective -"},{"location":"p02/#easily-accesibile-24x7-","text":"They are availble 24x7 for the customers. So they can tirelessly work without taking off unlike humans. And they can easily answer some generic queries plus can take information from the users effectively.","title":"Easily Accesibile 24x7: -"},{"location":"p02/#efficiency-","text":"Any customer can get a lot of basic detials about their stuff like where is there food order? or ETA of the delivery? Train schedule status etc in their mobile devices any where any time.","title":"Efficiency: -"},{"location":"p02/#scalable-","text":"It can handle multiple customer without getting tired. Plus waiting time also get reduced unlike the IVR calls where you have to wait untill the customer support agent gets free.","title":"Scalable: -"},{"location":"p02/#cost-effective-","text":"Certainly it can save you a lot of time and money with this much of efficiency and availibility.","title":"Cost effective: -"},{"location":"p02/#insights-and-lead-genration-","text":"Most of the time sales team can get their leads and insights from the chatbots. With this insight it helps them to know their client before hand like with their occupation, age, gender etc we can anticpate a lot about the customer.","title":"Insights and lead genration: -"},{"location":"p02/#point-to-consider-before-building-a-chatbot","text":"","title":"Point to consider before building a chatbot"},{"location":"p02/#is-problem-solvable-by-simple-qna","text":"","title":"is problem solvable by simple QnA ?"},{"location":"p02/#is-it-highly-repetitive-which-requires-fetching-and-anlaysis-of-data","text":"","title":"is it highly repetitive which requires fetching and anlaysis of data ?"},{"location":"p02/#can-it-be-automated","text":"If answers to above queries are yes then your business problem can be solved with a chatbot.","title":"can it be automated ?"},{"location":"p02/#common-terminologies-used-in-the-chatbots","text":"","title":"Common terminologies used in the chatbots"},{"location":"p02/#intent","text":"This means what could be the intention of the customer when he/she is asking certain questions. Example Q1. tell me about today's whether? Q2. how's the whether today ? the intent in both the questions user wants to know whether","title":"Intent"},{"location":"p02/#entity","text":"This are the parameters or the values that we want to extract from the queries asked by the users. Example Q1. Book me a flight from India to US? the entity is source and destination of the flight intent is to book a flight","title":"Entity"},{"location":"p02/#utterances","text":"This is nothing but the response of the chatbot for the query.","title":"Utterances"},{"location":"p02/#fulfillment","text":"This is nothing but processing an information given by the user and sendinf them a proper response. Here processing may involve interating with several APIs and then responding back. Example Booking a flight or cab. Ordering food etc This terminlogies will come into picture when we will build our bot","title":"Fulfillment"},{"location":"p03/","text":"Project layout and connection Here we are going to build a chatbot that can answer query related to COVID-19 pandemic. This is mainly going to be a FAQ bot that can basically will have the following functionality - It should be able to show demographic wise covid-19 cases It should capture user name It should capture user email id It should capture user mobile number It should capture user pincode It should be able to send covid-19 cases to report in detail and prevention measure to user mail id It should be integrated with facebook messenger and telegram It should be able to save all the conversation In any of databases preferred will be mongodb or any SQL system It should show map wise COVID cases in case a user is asking for a worldwide case of covid-19 Available platfroms to make chatbots- To impliment above functionalites we can use any of the below platfroms to impliment our bot - Amazon Lex Azure Luis Google DailogFlow Facebooks Wit.ai RASA All of the has certain pros and cons but for our current project we will be using Amazon Lex. Project block daigram and flow -","title":"Project layout and connection"},{"location":"p03/#project-layout-and-connection","text":"Here we are going to build a chatbot that can answer query related to COVID-19 pandemic. This is mainly going to be a FAQ bot that can basically will have the following functionality - It should be able to show demographic wise covid-19 cases It should capture user name It should capture user email id It should capture user mobile number It should capture user pincode It should be able to send covid-19 cases to report in detail and prevention measure to user mail id It should be integrated with facebook messenger and telegram It should be able to save all the conversation In any of databases preferred will be mongodb or any SQL system It should show map wise COVID cases in case a user is asking for a worldwide case of covid-19","title":"Project layout and connection"},{"location":"p03/#available-platfroms-to-make-chatbots-","text":"To impliment above functionalites we can use any of the below platfroms to impliment our bot -","title":"Available platfroms to make chatbots-"},{"location":"p03/#amazon-lex","text":"","title":"Amazon Lex"},{"location":"p03/#azure-luis","text":"","title":"Azure Luis"},{"location":"p03/#google-dailogflow","text":"","title":"Google DailogFlow"},{"location":"p03/#facebooks-witai","text":"","title":"Facebooks Wit.ai"},{"location":"p03/#rasa","text":"All of the has certain pros and cons but for our current project we will be using Amazon Lex.","title":"RASA"},{"location":"p03/#project-block-daigram-and-flow-","text":"","title":"Project block daigram and flow -"},{"location":"p04/","text":"Amazon lex The ecosystem Lex gives lot of functionalities out of the box. Lets discuss about each of them one by one 1. Lex console- 2. Create bot- 3. Bot dashboard- 4. Create intent- 5. Response cards and messages- 6. Create lot of possible Qs for an intent- 7. Create slots to extract entity- 8. Create a lambda function as per requirement 9. Use Lambds function to connect with extenal API- 10. Test your lambda function output by creating tests- 11. Multiple response msgs or utterances 12. Error handling","title":"Amazon lex"},{"location":"p04/#amazon-lex","text":"","title":"Amazon lex"},{"location":"p04/#the-ecosystem","text":"Lex gives lot of functionalities out of the box. Lets discuss about each of them one by one","title":"The ecosystem"},{"location":"p04/#1-lex-console-","text":"","title":"1. Lex console-"},{"location":"p04/#2-create-bot-","text":"","title":"2. Create bot-"},{"location":"p04/#3-bot-dashboard-","text":"","title":"3. Bot dashboard-"},{"location":"p04/#4-create-intent-","text":"","title":"4. Create intent-"},{"location":"p04/#5-response-cards-and-messages-","text":"","title":"5. Response cards and messages-"},{"location":"p04/#6-create-lot-of-possible-qs-for-an-intent-","text":"","title":"6. Create lot of possible Qs for an intent-"},{"location":"p04/#7-create-slots-to-extract-entity-","text":"","title":"7. Create slots to extract entity-"},{"location":"p04/#8-create-a-lambda-function-as-per-requirement","text":"","title":"8. Create a lambda function as per requirement"},{"location":"p04/#9-use-lambds-function-to-connect-with-extenal-api-","text":"","title":"9. Use Lambds function to connect with extenal API-"},{"location":"p04/#10-test-your-lambda-function-output-by-creating-tests-","text":"","title":"10. Test your lambda function output by creating tests-"},{"location":"p04/#11-multiple-response-msgs-or-utterances","text":"","title":"11. Multiple response msgs or utterances"},{"location":"p04/#12-error-handling","text":"","title":"12. Error handling"},{"location":"p05/","text":"Functionality needed outside Lex Ecosystem Flask Flask is a micro framework provided for building light weight APIs and web apps or web sites. Heroku Heroku is Platform as a Service(PaaS) provider to host your websites. It provides certain amount of spaces free for hobyst to experiment and host their websites or webapps. APIs APIs stands for Application Process Interface. These are nothing but URLs which when generally hit with POST request they return some data. For example in our case I'm using 2 APIs to get Covid State and district wise data plus world wise data. MongoDb Mongo db is a NoSQL database. I've used this database because of unstructured nature of our data gathering mainly for training our bot to get better accuracy. Here I've used cloud mongoDb to store my data on mongo db cloud Web scrapping This is a most important tool used to gather information which are not readily availble. We generailly used beautiful soup to go to a site and extact information from that. In this project I have used Web scrapping to extract PIN code data from the website.","title":"Functionality needed outside Lex Ecosystem"},{"location":"p05/#functionality-needed-outside-lex-ecosystem","text":"","title":"Functionality needed outside Lex Ecosystem"},{"location":"p05/#flask","text":"Flask is a micro framework provided for building light weight APIs and web apps or web sites.","title":"Flask"},{"location":"p05/#heroku","text":"Heroku is Platform as a Service(PaaS) provider to host your websites. It provides certain amount of spaces free for hobyst to experiment and host their websites or webapps.","title":"Heroku"},{"location":"p05/#apis","text":"APIs stands for Application Process Interface. These are nothing but URLs which when generally hit with POST request they return some data. For example in our case I'm using 2 APIs to get Covid State and district wise data plus world wise data.","title":"APIs"},{"location":"p05/#mongodb","text":"Mongo db is a NoSQL database. I've used this database because of unstructured nature of our data gathering mainly for training our bot to get better accuracy. Here I've used cloud mongoDb to store my data on mongo db cloud","title":"MongoDb"},{"location":"p05/#web-scrapping","text":"This is a most important tool used to gather information which are not readily availble. We generailly used beautiful soup to go to a site and extact information from that. In this project I have used Web scrapping to extract PIN code data from the website.","title":"Web scrapping"},{"location":"p06/","text":"Flask App Here's our layout for present project. [FOLDER] repersents Folder for us and rest are files (ie .py, .html. .ini .txt. pdf) Project layout \u251c\u2500\u2500 app . py \u251c\u2500\u2500 [ covidInfo ] \u2502 \u251c\u2500\u2500 covidData . py \u2502 \u2514\u2500\u2500 pinCodeData . csv \u251c\u2500\u2500 [ getCredentials ] \u2502 \u251c\u2500\u2500 config . ini \u2502 \u2514\u2500\u2500 read . py \u251c\u2500\u2500 [ loggingdb ] \u2502 \u2514\u2500\u2500 saveLog . py \u251c\u2500\u2500 [ Procfile ] \u251c\u2500\u2500 requirements . txt \u2514\u2500\u2500 [ sendDetailedEmail ] \u251c\u2500\u2500 email . py \u251c\u2500\u2500 FAQ1 . pdf \u2514\u2500\u2500 Template_corona_info . html Click on the top right corner to see the full codes. Folowing are the glimpse of the main portion of the code - inside app.py we have severals webhooks - this one to get world data - @app . route ( \"/covidWorld\" , methods = [ 'POST' ]) @cross_origin () def covidWorld (): try : dataRequest = request . get_json () To get pincode wise data - @app . route ( \"/covidInfo\" , methods = [ 'POST' ]) @cross_origin () def covidInfo (): try : To send the mail following webhook is used - @app . route ( \"/sendMail\" , methods = [ \"POST\" ]) @cross_origin () def sendMail (): try : Following are the supporting modules for app.py to save logs - Check saveLog.py To send mail Check email.py To get credentials Check read.py To covid data - Check covidData.py","title":"Flask App"},{"location":"p06/#flask-app","text":"Here's our layout for present project. [FOLDER] repersents Folder for us and rest are files (ie .py, .html. .ini .txt. pdf)","title":"Flask App"},{"location":"p06/#project-layout","text":"\u251c\u2500\u2500 app . py \u251c\u2500\u2500 [ covidInfo ] \u2502 \u251c\u2500\u2500 covidData . py \u2502 \u2514\u2500\u2500 pinCodeData . csv \u251c\u2500\u2500 [ getCredentials ] \u2502 \u251c\u2500\u2500 config . ini \u2502 \u2514\u2500\u2500 read . py \u251c\u2500\u2500 [ loggingdb ] \u2502 \u2514\u2500\u2500 saveLog . py \u251c\u2500\u2500 [ Procfile ] \u251c\u2500\u2500 requirements . txt \u2514\u2500\u2500 [ sendDetailedEmail ] \u251c\u2500\u2500 email . py \u251c\u2500\u2500 FAQ1 . pdf \u2514\u2500\u2500 Template_corona_info . html Click on the top right corner to see the full codes. Folowing are the glimpse of the main portion of the code -","title":"Project layout"},{"location":"p06/#inside-apppy-we-have-severals-webhooks-","text":"","title":"inside app.py we have severals webhooks -"},{"location":"p06/#this-one-to-get-world-data-","text":"@app . route ( \"/covidWorld\" , methods = [ 'POST' ]) @cross_origin () def covidWorld (): try : dataRequest = request . get_json ()","title":"this one to get world data -"},{"location":"p06/#to-get-pincode-wise-data-","text":"@app . route ( \"/covidInfo\" , methods = [ 'POST' ]) @cross_origin () def covidInfo (): try :","title":"To get pincode wise data -"},{"location":"p06/#to-send-the-mail-following-webhook-is-used-","text":"@app . route ( \"/sendMail\" , methods = [ \"POST\" ]) @cross_origin () def sendMail (): try :","title":"To send the mail following webhook is used -"},{"location":"p06/#following-are-the-supporting-modules-for-apppy","text":"","title":"Following are the supporting modules for app.py"},{"location":"p06/#to-save-logs-","text":"Check saveLog.py","title":"to save logs -"},{"location":"p06/#to-send-mail","text":"Check email.py","title":"To send mail"},{"location":"p06/#to-get-credentials","text":"Check read.py","title":"To get credentials"},{"location":"p06/#to-covid-data-","text":"Check covidData.py","title":"To covid data -"},{"location":"p07/","text":"Deployment on Heroku Following are the steps to create a new project and deploy on Heroku - Login to dashboard login to heroku. Create an app Follow the instructions given using Heroku CLI Install the Heroku CLI Download and install the Heroku CLI. If you haven't already, log in to your Heroku account and follow the prompts to create a new SSH public key. $ heroku login Create a new Git repository Initialize a git repository in a new or existing directory $ cd my-project/ $ git init $ heroku git:remote -a test-c17hawke Deploy your application Commit your code to the repository and deploy it to Heroku using Git. $ git add . $ git commit -am \"make it better\" $ git push heroku master Existing Git repository For existing repositories, simply add the heroku remote $ heroku git:remote -a test-c17hawke Before deploying create the following files - Procfile It should contain the following line- Note web: python app.py requirements.txt it should contain all the dependencies mentioned as shown below - Note APScheduler==3.6.3 certifi==2019.11.28 Click==7.0 colorhash==1.0.2 configparser==4.0.2 Flask==1.1.1","title":"Deployment on Heroku"},{"location":"p07/#deployment-on-heroku","text":"Following are the steps to create a new project and deploy on Heroku -","title":"Deployment on Heroku"},{"location":"p07/#login-to-dashboard","text":"login to heroku.","title":"Login to dashboard"},{"location":"p07/#create-an-app","text":"","title":"Create an app"},{"location":"p07/#follow-the-instructions-given-using-heroku-cli","text":"Install the Heroku CLI Download and install the Heroku CLI. If you haven't already, log in to your Heroku account and follow the prompts to create a new SSH public key. $ heroku login Create a new Git repository Initialize a git repository in a new or existing directory $ cd my-project/ $ git init $ heroku git:remote -a test-c17hawke Deploy your application Commit your code to the repository and deploy it to Heroku using Git. $ git add . $ git commit -am \"make it better\" $ git push heroku master Existing Git repository For existing repositories, simply add the heroku remote $ heroku git:remote -a test-c17hawke","title":"Follow the instructions given using Heroku CLI"},{"location":"p07/#before-deploying-create-the-following-files-","text":"Procfile It should contain the following line- Note web: python app.py requirements.txt it should contain all the dependencies mentioned as shown below - Note APScheduler==3.6.3 certifi==2019.11.28 Click==7.0 colorhash==1.0.2 configparser==4.0.2 Flask==1.1.1","title":"Before deploying create the following files -"},{"location":"p08/","text":"Integration of chatbot with FB and Slack FB intergration Step 1: Create an Amazon Lex Bot Step 2: Create a Facebook Application Step 3: Integrate Facebook Messenger with the Amazon Lex Bot Step 4: Test the Integration Slack integration Step 1: Create an Amazon Lex Bot Step 2: Sign Up for Slack and Create a Slack Team Step 3: Create a Slack Application Step 4: Integrate the Slack Application with the Amazon Lex Bot Step 5: Complete Slack Integration Step 6: Test the Integration","title":"Integration of chatbot with FB and Slack"},{"location":"p08/#integration-of-chatbot-with-fb-and-slack","text":"","title":"Integration of chatbot with FB and Slack"},{"location":"p08/#fb-intergration","text":"Step 1: Create an Amazon Lex Bot Step 2: Create a Facebook Application Step 3: Integrate Facebook Messenger with the Amazon Lex Bot Step 4: Test the Integration","title":"FB intergration"},{"location":"p08/#slack-integration","text":"Step 1: Create an Amazon Lex Bot Step 2: Sign Up for Slack and Create a Slack Team Step 3: Create a Slack Application Step 4: Integrate the Slack Application with the Amazon Lex Bot Step 5: Complete Slack Integration Step 6: Test the Integration","title":"Slack integration"},{"location":"p09/","text":"Final Demo FB messanger demo Slack Demo Emails Received on laptop on phone Logs stored demo","title":"Final Demo"},{"location":"p09/#final-demo","text":"","title":"Final Demo"},{"location":"p09/#fb-messanger-demo","text":"","title":"FB messanger demo"},{"location":"p09/#slack-demo","text":"","title":"Slack Demo"},{"location":"p09/#emails-received","text":"","title":"Emails Received"},{"location":"p09/#on-laptop","text":"","title":"on laptop"},{"location":"p09/#on-phone","text":"","title":"on phone"},{"location":"p09/#logs-stored-demo","text":"","title":"Logs stored demo"},{"location":"p10/","text":"References Following are the most important references - Amazon Lex tutorial by iNeuron Amazon Lex document page Amazon Lex Documentation Flask document page Flask docs Building Chatbots with Python (Book) Using Natural Language Processing and Machine Learning \u2014 Sumit Raj mongo db document page MongoDB Atlas MongoDB Python Drivers","title":"References"},{"location":"p10/#references","text":"Following are the most important references -","title":"References"},{"location":"p10/#amazon-lex-tutorial-by-ineuron","text":"","title":"Amazon Lex tutorial by iNeuron"},{"location":"p10/#amazon-lex-document-page","text":"Amazon Lex Documentation","title":"Amazon Lex document page"},{"location":"p10/#flask-document-page","text":"Flask docs","title":"Flask document page"},{"location":"p10/#building-chatbots-with-python-book","text":"Using Natural Language Processing and Machine Learning \u2014 Sumit Raj","title":"Building Chatbots with Python (Book)"},{"location":"p10/#mongo-db-document-page","text":"MongoDB Atlas MongoDB Python Drivers","title":"mongo db document page"}]}